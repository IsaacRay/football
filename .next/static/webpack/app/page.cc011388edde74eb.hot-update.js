"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/lib/supabaseQueries.ts":
/*!************************************!*\
  !*** ./app/lib/supabaseQueries.ts ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createPlayerForCurrentUser: () => (/* binding */ createPlayerForCurrentUser),\n/* harmony export */   getAllTeams: () => (/* binding */ getAllTeams),\n/* harmony export */   getAvailableTeams: () => (/* binding */ getAvailableTeams),\n/* harmony export */   getCurrentUserPlayer: () => (/* binding */ getCurrentUserPlayer),\n/* harmony export */   getDefaultPool: () => (/* binding */ getDefaultPool),\n/* harmony export */   getGamesByWeek: () => (/* binding */ getGamesByWeek),\n/* harmony export */   getPicksByPlayer: () => (/* binding */ getPicksByPlayer),\n/* harmony export */   getPlayersByPool: () => (/* binding */ getPlayersByPool),\n/* harmony export */   submitPick: () => (/* binding */ submitPick),\n/* harmony export */   updateGameWinner: () => (/* binding */ updateGameWinner)\n/* harmony export */ });\n/* harmony import */ var _utils_supabase_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/supabase/client */ \"(app-pages-browser)/./app/utils/supabase/client.ts\");\n\nconst supabase = (0,_utils_supabase_client__WEBPACK_IMPORTED_MODULE_0__.createClient)();\n// Teams\nasync function getAllTeams() {\n    const { data, error } = await supabase.from('teams').select('*').order('name');\n    if (error) {\n        return [];\n    }\n    return data || [];\n}\n// Games\nasync function getGamesByWeek(week) {\n    let season = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 2025;\n    const { data, error } = await supabase.from('games').select('*').eq('season', season).eq('week_number', week).order('game_time');\n    if (error) {\n        return [];\n    }\n    return data || [];\n}\n// Update game winner (Admin function)\nasync function updateGameWinner(gameId, winnerId) {\n    const { error } = await supabase.from('games').update({\n        winner: winnerId,\n        is_complete: winnerId !== null,\n        updated_at: new Date().toISOString()\n    }).eq('id', gameId);\n    if (error) {\n        return false;\n    }\n    return true;\n}\n// Players\nasync function getPlayersByPool(poolId) {\n    const { data, error } = await supabase.from('players').select('*').eq('pool_id', poolId).order('lives_remaining', {\n        ascending: false\n    }).order('display_name');\n    if (error) {\n        console.error('Error fetching players:', error);\n        return [];\n    }\n    return data || [];\n}\nasync function getCurrentUserPlayer(poolId) {\n    const { data: { user } } = await supabase.auth.getUser();\n    if (!user) return null;\n    const { data, error } = await supabase.from('players').select('*').eq('pool_id', poolId).eq('user_id', user.id).single();\n    if (error) {\n        console.error('Error fetching current user player:', error);\n        return null;\n    }\n    return data;\n}\n// Picks\nasync function getPicksByPlayer(playerId) {\n    const { data, error } = await supabase.from('picks').select('*').eq('player_id', playerId).order('week_number');\n    if (error) {\n        console.error('Error fetching picks:', error);\n        return [];\n    }\n    return data || [];\n}\nasync function submitPick(pick) {\n    const { error } = await supabase.from('picks').insert(pick);\n    if (error) {\n        console.error('Error submitting pick:', error);\n        return false;\n    }\n    return true;\n}\n// Pools\nasync function getDefaultPool() {\n    const { data, error } = await supabase.from('pools').select('*').eq('is_active', true).order('created_at', {\n        ascending: false\n    }).limit(1).single();\n    if (error) {\n        console.error('Error fetching default pool:', error);\n        return null;\n    }\n    return data;\n}\nasync function createPlayerForCurrentUser(poolId, displayName) {\n    var _user_email;\n    const { data: { user } } = await supabase.auth.getUser();\n    if (!user) return null;\n    const { data, error } = await supabase.from('players').insert({\n        pool_id: poolId,\n        user_id: user.id,\n        display_name: displayName || ((_user_email = user.email) === null || _user_email === void 0 ? void 0 : _user_email.split('@')[0]) || 'Player',\n        lives_remaining: 3,\n        is_eliminated: false\n    }).select().single();\n    if (error) {\n        console.error('Error creating player:', error);\n        return null;\n    }\n    return data;\n}\n// Available teams for a player (teams not yet used)\nasync function getAvailableTeams(playerId) {\n    // Get all teams\n    const allTeams = await getAllTeams();\n    // Get player's picks\n    const picks = await getPicksByPlayer(playerId);\n    const usedTeamIds = picks.map((pick)=>pick.team_id);\n    // Filter out used teams\n    return allTeams.filter((team)=>!usedTeamIds.includes(team.id));\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/lib/supabaseQueries.ts\n"));

/***/ })

});